# -*- coding: utf-8 -*-
"""image_classification

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sux8ku826ukFIFobwx7PExR7EnZkL1jo
"""

# Commented out IPython magic to ensure Python compatibility.
# %tensorflow_version 1.x
from keras.models import Sequential

from keras.layers import Dense, MaxPooling2D, Conv2D, Flatten

model = Sequential()

model.add(Conv2D(32,3,3, input_shape = (64,64,3), activation = 'relu'))

model.add(MaxPooling2D(pool_size=(2,2)))

model.add(Flatten())

model.add(Dense(units=128, activation ='relu', init = 'random_uniform'))

model.add(Dense(output_dim = 3, activation ='sigmoid', init='random_uniform'))

model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

from keras.preprocessing.image import ImageDataGenerator
train_datagen=ImageDataGenerator(rescale=1./255,shear_range=0.2,zoom_range=0.2,horizontal_flip=True)
test_datagen = ImageDataGenerator(rescale=1./255)
x_train = train_datagen.flow_from_directory(r"/content/drive/My Drive/datset/train_set",target_size=(64,64),batch_size=32,class_mode='categorical')
x_test = train_datagen.flow_from_directory(r'/content/drive/My Drive/datset/test_set',target_size=(64,64),batch_size=32,class_mode='categorical')

model.fit_generator(x_train, samples_per_epoch=1000, epochs=5, validation_data=x_test, nb_val_samples=1000)

model.save('mymodel.h5')

from keras.models import load_model
import numpy as np
import cv2
model = load_model('mymodel.h5')

model.compile(optimizer='adam', loss = 'binary_crossentropy')

from skimage.transform import resize
def detect(frame):
  try:
    img = resize(frame,(64,64))
    img = np.expand_dims(img, axis=0)
    if np.max(img) > 1:
      img = img/255.0
    prediction = model.predict(img)
    print(prediction)
    prediction_class = model.predict_classes(img)
    print(prediction_class)
  except AttributeError:
    print("shape not found")

frame = cv2.imread("/content/cat.1.jpg")
data = detect(frame)

